<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<context:component-scan base-package="org.revo" />
	<context:annotation-config />
	<mvc:annotation-driven />
	<mvc:resources location="/resources/" mapping="/resources/**" />
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		p:viewClass="org.springframework.web.servlet.view.tiles3.TilesView" />

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
	</bean>
	<!-- <bean class="java.net.URI" id="dbUrl"> <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/> 
		</bean> <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + 
		':' + @dbUrl.getPort() + @dbUrl.getPath() }"/> <property name="username" 
		value="#{ @dbUrl.getUserInfo().split(':')[0] }"/> <property name="password" 
		value="#{ @dbUrl.getUserInfo().split(':')[1] }"/> </bean> -->
		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/postgres" />
		<property name="username" value="postgres" />
		<property name="password" value="root" />
	</bean>

	<bean id="SessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="org.revo.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="SessionFactory" />

	<mvc:interceptors>
		<bean
			class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
			<property name="sessionFactory">
				<ref local="SessionFactory" />
			</property>
		</bean>
	</mvc:interceptors>
	<security:http use-expressions="true" auto-config="true">
		<security:intercept-url pattern="/user/**"
			access="hasAnyRole('Role_ADMIN,Role_USER')" />
		<security:form-login default-target-url="/"
			login-page="/" password-parameter="password" login-processing-url="/check"
			username-parameter="email" />
		<security:logout logout-url="/logout" />
		<security:remember-me remember-me-parameter="remember" />
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider
			ref="dao" />
	</security:authentication-manager>
	<bean id="dao"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="passwordEncoder" ref="passwordEncoder" />
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="userDetailsService" class="org.revo.ser.impl.userDetailsService" />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="ashraf1revo@gmail.com" />
		<property name="password" value="01120266849" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	<bean id="mymail" class="org.revo.controller.Mymail" />

</beans>
